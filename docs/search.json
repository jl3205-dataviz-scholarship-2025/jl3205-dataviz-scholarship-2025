[
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Risk Patterns & Operational Implications",
    "section": "",
    "text": "Code\nsuppressMessages(reticulate::py_install(\"scipy\"))\nsuppressMessages(reticulate::py_install(\"plotly\"))\nsuppressMessages(reticulate::py_install(\"scikit-learn\"))\nThis analysis builds on the EDA by uncovering systematic risk disparities, emerging threat patterns, and potential predictive signals. Here, the focus shifts to understanding why these patterns emerge, how they cluster, and what they imply for decision-making in the field."
  },
  {
    "objectID": "analysis.html#victim-disparity-national-vs.-international-staff",
    "href": "analysis.html#victim-disparity-national-vs.-international-staff",
    "title": "Risk Patterns & Operational Implications",
    "section": "Victim Disparity: National vs. International Staff",
    "text": "Victim Disparity: National vs. International Staff\n\nAre national staff disproportionately affected by violence?\n\nThe following analysis compares harm profiles between national and international aid workers across three key outcomes: fatalities, injuries, and abductions.\n\nThe results confirm a key insight—national staff are often on the frontlines of humanitarian crises, bearing the brunt of operational risk.\n\n\nFatalitiesInjuriesAbductions\n\n\n\n\nCode\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import ttest_ind\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import chi2_contingency\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport plotly.express as px\n\ndf = pd.read_csv(\"clean_data/security_incidents_cleaned.csv\")\n\n\ndef plot_victim_impact(df, national_col, international_col, label):\n    filtered_df = df[(df[national_col] &gt; 0) | (df[international_col] &gt; 0)]\n\n    long_df = pd.DataFrame({\n        label: pd.concat([\n            filtered_df[national_col],\n            filtered_df[international_col]\n        ], ignore_index=True),\n        \"Role\": [\"Nationals\"] * len(filtered_df) + [\"Internationals\"] * len(filtered_df)\n    })\n\n    t_stat, p_val = ttest_ind(\n        filtered_df[national_col],\n        filtered_df[international_col],\n        equal_var=False\n    )\n\n    plt.figure(figsize=(8, 5))\n    sns.boxplot(\n        data=long_df,\n        x=\"Role\", y=label,\n        hue=\"Role\", dodge=False,\n        palette={\"Nationals\": \"#4EA8DE\", \"Internationals\": \"#F4A261\"}\n    )\n    plt.title(label, fontsize=14, weight=\"bold\")\n    plt.ylabel(\"Amount\")\n    plt.xlabel(\"\")\n    plt.tick_params(labelsize=11)\n    plt.grid(axis=\"y\", linestyle=\"--\", alpha=0.4)\n\n    legend = plt.gca().get_legend()\n    if legend:\n        legend.remove()\n\n    annotation = f\"P &lt; 0.0001\" if p_val &lt; 0.0001 else f\"T = {t_stat:.2f}\\nP = {p_val:.4f}\"\n    plt.text(\n        0.5, plt.ylim()[1]*0.85,\n        annotation,\n        ha='center', va='top',\n        fontsize=14, fontweight='bold', color='white',\n        bbox=dict(facecolor='black', edgecolor='white',\n                  boxstyle='round,pad=0.6')\n    )\n\n    plt.tight_layout()\n    plt.show()\n\n\nplot_victim_impact(df, \"Nationals killed\",\n                   \"Internationals killed\", \"Fatalities\")\n\n\n\n\n\n\n\n\n\n\nFigure 8: Fatalities are significantly higher among nationals - stressing the disproportionate frontline exposure in high-threat environments\n\n\n\n\n\nCode\nplot_victim_impact(df, \"Nationals wounded\",\n                   \"Internationals wounded\", \"Injuries\")\n\n\n\n\n\n\n\n\n\n\nFigure 9: Injury counts further highlight the disproportionate risk faced by nationals in high-risk deployments.\n\n\n\n\n\nCode\nplot_victim_impact(df, \"Nationals kidnapped\",\n                   \"Internationals kidnapped\", \"Abductions\")\n\n\n\n\n\n\n\n\n\n\nFigure 10: Abduction risk also skews heavily towards nationals, reflecting mobility and protectionn disparities.\n\n\n\n\n\n\n\n\n\n\nOperational Asymmetry\n\n\n\nAcross all three types of harm, nationals consistently face significantly higher rates of violence. This structural risk disparity underscores the need to reassess field deployment strategies, training programs, and protective measures specifically tailored to national teams."
  },
  {
    "objectID": "analysis.html#modus-operandi-by-threat-actor",
    "href": "analysis.html#modus-operandi-by-threat-actor",
    "title": "Risk Patterns & Operational Implications",
    "section": "Modus Operandi by Threat Actor",
    "text": "Modus Operandi by Threat Actor\n\nDo certain actor types favor particular forms of violence?\n\nUnderstanding the relationship between perpetrator type and their chosen tactics provides valuable insight into operational risk profiling.\n\nThis matrix helps surface behavioral patterns, enabling field teams to anticipate the nature of threats they are likely to face.\n\n\n\nCode\ncontingency = pd.crosstab(df[\"Actor type\"], df[\"Means of attack\"])\nchi2, p, dof, expected = chi2_contingency(contingency)\n\n# print(f\"Chi-square statistic: {chi2:.2f}, p-value: {p:.4f}\")\n\nplt.figure(figsize=(10, 6))\nsns.heatmap(contingency, cmap=\"Reds\", annot=True, fmt=\"d\")\nplt.title(\"Actor Type vs. Means of Attack\")\nplt.ylabel(\"Actor Type\")\nplt.xlabel(\"Means of Attack\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\nFigure 11: This matrix reveals clear associations between threat actor types and their preferred methods of attack."
  },
  {
    "objectID": "analysis.html#archetypes-of-threat",
    "href": "analysis.html#archetypes-of-threat",
    "title": "Risk Patterns & Operational Implications",
    "section": "Archetypes of Threat",
    "text": "Archetypes of Threat\n\nCan we group incidents into clusters that reveal patterns in threat profiles?\n\nUsing PCA and KMeans clustering, I reduced the ‘incident’ feature space to reveal emergent threat archetypes. These clusters can help field actors recognize common attack profiles and identify anomalies.\n\nNotably, several outlier incidents lie far beyond the main cluster, suggesting the presence of atypical threat scenarios—such as isolated, high-casualty events.\n\n\n\nCode\nfeatures = df[[\"UN\", \"INGO\", \"ICRC\", \"NNGO\", \"Other\", \"Nationals killed\",\n               \"Internationals killed\", \"Means of attack\", \"Actor type\"]].copy()\n\nfeatures = pd.get_dummies(\n    features, columns=[\"Means of attack\", \"Actor type\"], drop_first=True)\n\nX = StandardScaler().fit_transform(features.fillna(0))\n\nkmeans = KMeans(n_clusters=4, random_state=42)\ndf[\"Cluster\"] = kmeans.fit_predict(X)\n\npca = PCA(n_components=2)\ncomponents = pca.fit_transform(X)\ndf[\"PC1\"] = components[:, 0]\ndf[\"PC2\"] = components[:, 1]\n\nfig = px.scatter(df, x=\"PC1\", y=\"PC2\", color=\"Cluster\",\n                 title=\"Incident Clusters (Threat Archetypes)\",\n                 hover_data=[\"Means of attack\", \"Actor type\"])\nfig.show()\n\n\n                        \n                                            \n\n\n\nFigure 12: PCA combined with KMeans clustering reveals distinct archetypes of threat incidents. Most events fall into dense clusters, indicating recurring operational patterns, while a handful of outlier points highlight rare or extreme scenarios—such as isolated, high-casualty attacks. These insights lay the groundwork for risk profiling and the development of early warning systems in humanitarian security planning."
  },
  {
    "objectID": "analysis.html#predict-to-protect",
    "href": "analysis.html#predict-to-protect",
    "title": "Risk Patterns & Operational Implications",
    "section": "Predict to Protect",
    "text": "Predict to Protect\n\nCan we predict whether an attack will be fatal based on key attributes?\n\nLogistic regression is defined as a statistical modeling technique used to predict binary outcomes — such as whether an incident results in a fatality — based on a set of input features.\nAs proof of concept, I trained a logistic regression model using organizational presence, perpetrator type, and method of attack to predict whether an incident results in fatalities.\n\nThis highlights the potential for automated threat assessment systems within humanitarian operations.\n\n\n\n\n\n\n\nWhy Logistic Regression?\n\n\n\nLogistic regression was selected for its simplicity and interpretability — key in high-stakes decision environments. The model incorporates class balancing to address skewed fatality rates and ensure sensitivity to rare, high-risk outcomes.\n\n\n\n\nCode\nnp.random.seed(5300)\n\ndf[\"Fatal\"] = (df[\"Nationals killed\"] + df[\"Internationals killed\"]) &gt; 0\nfeatures = df[[\"UN\", \"INGO\", \"ICRC\", \"NNGO\", \"Means of attack\", \"Actor type\"]]\nfeatures = pd.get_dummies(features, drop_first=True).fillna(0)\n\nX = features\ny = df[\"Fatal\"]\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42)\n\nmodel = LogisticRegression(\n    max_iter=1000,\n    class_weight='balanced',\n    solver='liblinear',\n    random_state=42\n)\nmodel.fit(X_train, y_train)\n\n\nLogisticRegression(class_weight='balanced', max_iter=1000, random_state=42,\n                   solver='liblinear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(class_weight='balanced', max_iter=1000, random_state=42,\n                   solver='liblinear') \n\n\nCode\ny_pred = model.predict(X_test)\n\nreport_dict = classification_report(y_test, y_pred, output_dict=True)\nreport_df = pd.DataFrame(report_dict).T.loc[[\"False\", \"True\"], [\n    \"precision\", \"recall\", \"f1-score\"]]\nreport_df.index = [\"No Fatality\", \"Fatality\"]\n\nreport_df.plot(kind='bar', figsize=(9, 5), color=[\n               \"#4EA8DE\", \"#F4A261\", \"#E76F51\"])\nplt.title(\"Logistic Regression Performance by Class\",\n          fontsize=14, weight=\"bold\")\nplt.ylabel(\"Score\")\n_ = plt.ylim(0, 1.05)\n_ = plt.xticks(rotation=0)\nplt.grid(axis='y', linestyle='--', alpha=0.4)\n_ = plt.legend(title=\"Metric\", bbox_to_anchor=(1.05, 1), loc=\"upper left\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\nFigure 13: This proof-of-concept model demonstrates the viability of forecasting fatal attacks using features such as organizational footprint and threat type.\n\n\nField teams could leverage models like this to prioritize risk assessments for high-profile deployments or unusual attacker–tactic pairings."
  },
  {
    "objectID": "future.html",
    "href": "future.html",
    "title": "From Insight to Action",
    "section": "",
    "text": "“Where digital systems were in place, humanitarian actors gained a decisive edge in crisis response — improving targeting of assistance, coordination across agencies, and adaptive response planning.”1"
  },
  {
    "objectID": "future.html#call-to-action",
    "href": "future.html#call-to-action",
    "title": "From Insight to Action",
    "section": "Call to Action",
    "text": "Call to Action\nWe see that data alone cannot protect frontline workers. However, when it is structured, analyzed, and acted upon, it becomes a powerful tool for foresight—helping us predict and prevent devastating attacks before they happen. We must also confront the clear disparity in risk between national and international staff, with national workers often facing significantly higher exposure. Similarly, the urban vs. rural threat landscape reveals distinct operational vulnerabilities, underscoring the importance of context-specific planning and protection strategies.\nOverall, this project underscores the critical value of predictive modeling and early warning dashboards as essential tools for proactive humanitarian security."
  },
  {
    "objectID": "future.html#future-actions-intelligence-roadmap",
    "href": "future.html#future-actions-intelligence-roadmap",
    "title": "From Insight to Action",
    "section": "Future Actions & Intelligence Roadmap",
    "text": "Future Actions & Intelligence Roadmap\nThese future actions are made by building on past patterns. This roadmap outlines a practical intelligence roadmap by transforming analysis into actionable protection.\n\nOperational Sandbox:\n\nCreate an open-data dashboard for NGOs to explore historical incidents, identify emerging clusters, and anticipate future threats2.\nInspired by EDA findings showing persistent spatial and thematic clusters.\n\nReal-Time Risk Scoring:\n\nUse logistic models trained on incident features to evaluate new reports and estimate fatality likelihood in real time.\nBuilt on the logistic regression performance shown in this project.\n\nGeo-Temporal Intelligence Fusion:\n\nMerge field data with external streams (e.g., satellite imagery, SMS alerts, social media signals) to enhance situational awareness2.\nInspired by the animated timeline and threat hotspot visualizations in this analysis."
  },
  {
    "objectID": "future.html#humanitarian-threat-anticipation-system",
    "href": "future.html#humanitarian-threat-anticipation-system",
    "title": "From Insight to Action",
    "section": "Humanitarian Threat Anticipation System",
    "text": "Humanitarian Threat Anticipation System\n\n\nNote:\nincident logs + external intel → model → alert → field action."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fatal Compassion: Mapping the Deadliest Zones for Aid Workers",
    "section": "",
    "text": "‼️ 4,337 deadly events. 75+ countries. One goal: protect those who protect others.1\n\n\n\n\nGlobal Humanitarian Threat Network\n\n\nAcross some of the world’s most fragile regions, humanitarian aid workers — from 1997 to the present — have faced an escalating spectrum of violent threats, ranging from ambushes to abductions. This project transforms raw incident records into a threat - informed intelligence layer to support operational decision - making.\nBy analyzing thousands of recorded attacks on UN agencies, international NGOs, and Red Cross affiliates, I uncovered patterns in time, geography, and modus operandi. This allows us to identify not only where humanitarian work is most dangerous, but also trace how threat environments shift over time.\nThe approach is inspired by real-time situational awareness platforms commonly used in defense and security contexts2. Just as Palantir empowers decision - makers in conflict zones, this project aims to do the same for humanitarian stakeholders — equipping them with foresight, not just hindsight3.\n\n\n\n\nReferences\n\n1. ChatGPT, version-4o, OpenAI, march-24, 2024, chat.openai.com.\n\n\n2. KuRpiewsKa-KoRbut, R. Digital technologies in the global humanitarian sector: A case study of ukraine. Journal of Modern Science 60, 730–743 (2024).\n\n\n3. Martin, A. Aidwashing surveillance: Critiquing the corporate exploitation of humanitarian crises. Surveillance & Society 21, 96–102 (2023)."
  },
  {
    "objectID": "tidy.html",
    "href": "tidy.html",
    "title": "Data Integrity & Readiness",
    "section": "",
    "text": "Before diving into the story behind the dataset, I want to highlight the key data - cleaning steps I took:\n\nMissing categorical values: Several important categorical columns — such as Country Code, Country, Region, District, City, Sector Name, Motive, and Verified — contained missing values. I replaced these with the placeholder “Unknown” to ensure consistent grouping and filtering in visualizations.\nNumeric date fields: For the Month and Day columns, missing values were filled using the median of each column. These values were then converted from float to integer to maintain proper formatting. This approach preserves the utility of the data for temporal analysis without distorting the timeline.\nOrganizational count columns: Columns representing organizational involvement (ICRC, NRCS, IFRC, NNGO) had missing values, which I assumed indicated no involvement. These were replaced with zeros and converted to integers for accurate quantitative analysis.\nGeolocation data: I removed 13 rows that lacked both latitude and longitude, as geographic coordinates are essential for spatial analysis. Without valid location data, these entries could not contribute meaningfully to geospatial insights. As a result, the dataset was reduced from 4,337 to 4,324 entries.\n\n\nThe tables below summarize the impact of the cleaning process, including missing-value resolution and row-level filtering based on spatial validity criteria.\n\n\n\nCode\nsuppressMessages(library(tidyverse))\n\nraw_df &lt;- read_csv(\"raw_data/security_incidents.csv\", show_col_types = FALSE)\nclean_df &lt;- read_csv(\"clean_data/security_incidents_cleaned.csv\", show_col_types = FALSE)\n\nmissing_compare &lt;- tibble(\n    Column = names(raw_df),\n    Raw_Missing = sapply(raw_df, function(x) sum(is.na(x))),\n    Cleaned_Missing = sapply(clean_df, function(x) sum(is.na(x)))\n) |&gt;\n    mutate(\n        Missing_Reduced = Raw_Missing - Cleaned_Missing\n    )\n\nmissing_compare |&gt;\n    arrange(desc(Missing_Reduced)) |&gt;\n    print(n = 20)\n\n\n# A tibble: 41 × 4\n   Column        Raw_Missing Cleaned_Missing Missing_Reduced\n   &lt;chr&gt;               &lt;int&gt;           &lt;int&gt;           &lt;int&gt;\n 1 City                  988               0             988\n 2 District              736               0             736\n 3 Day                   380               0             380\n 4 Region                367               0             367\n 5 Month                  48               0              48\n 6 Country Code           33               0              33\n 7 Latitude               13               0              13\n 8 Longitude              13               0              13\n 9 ICRC                    9               0               9\n10 NRCS and IFRC           9               0               9\n11 NNGO                    9               0               9\n12 Actor name              8               0               8\n13 Country                 5               0               5\n14 Motive                  4               0               4\n15 Verified                1               0               1\n16 Incident ID             0               0               0\n17 Year                    0               0               0\n18 UN                      0               0               0\n19 INGO                    0               0               0\n20 Other                   0               0               0\n# ℹ 21 more rows\n\n\n\nTable: Comparison of missing values before and after cleaning.\n\n\n\nCode\ntibble(\n    Raw_Rows = nrow(raw_df),\n    Cleaned_Rows = nrow(clean_df),\n    Rows_Removed = nrow(raw_df) - nrow(clean_df)\n)\n\n\n# A tibble: 1 × 3\n  Raw_Rows Cleaned_Rows Rows_Removed\n     &lt;int&gt;        &lt;int&gt;        &lt;int&gt;\n1     4337         4324           13\n\n\n\nTable: Summary of row reduction after cleaning"
  },
  {
    "objectID": "visuals.html",
    "href": "visuals.html",
    "title": "Field Intelligence Patterns",
    "section": "",
    "text": "In this section, I examine the dataset through the lens of tactical intelligence — uncovering patterns across time, geography, organizational presence, types of violence, and perpetrator characteristics. Each visualization contributes to constructing a clearer picture of the risk environment faced by humanitarian actors in volatile regions.\nThis EDA lays the groundwork for more advanced operational analysis — including anomaly detection, actor - motive clustering, and region - specific risk modeling."
  },
  {
    "objectID": "visuals.html#incident-hotspots-by-geography",
    "href": "visuals.html#incident-hotspots-by-geography",
    "title": "Field Intelligence Patterns",
    "section": "Incident Hotspots by Geography",
    "text": "Incident Hotspots by Geography\n\nHow have incident locations shifted — and where do they concentrate most?\n\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(plotly))\n\ndf &lt;- read_csv(\"clean_data/security_incidents_cleaned.csv\", show_col_types = FALSE)\n\ndf_map &lt;- df |&gt; \n  filter(!is.na(Latitude), !is.na(Longitude)) |&gt; \n  select(Year, Country, Latitude, Longitude, `Total affected`)\n\nplot_geo(df_map) |&gt;\n  add_markers(\n    x = ~Longitude, y = ~Latitude,\n    frame = ~Year,\n    size = ~`Total affected`,\n    hoverinfo = \"text\",\n    text = ~paste(\"Year:\", Year, \"&lt;br&gt;Country:\", Country, \"&lt;br&gt;Total affected:\", `Total affected`),\n    marker = list(color = 'red', opacity = 0.6, line = list(width = 0)),\n    name = \"Confirmed Incident Location\"\n  ) |&gt;\n  layout(\n    margin = list(t = 90),\n    title = \"Evolving Threat Landscape: Aid Worker Attacks (1997–2025)\",\n    geo = list(\n      projection = list(type = \"natural earth\"),\n      showland = TRUE,\n      landcolor = \"gray10\",\n      countrycolor = \"gray50\",\n      bgcolor = \"#1e1e1e\"\n    ),\n    paper_bgcolor = \"#1e1e1e\",\n    plot_bgcolor = \"#1e1e1e\",\n    font = list(color = \"#FFFFFF\"),\n    legend = list(\n    x = 0.9, \n    y = 0.9,\n    font = list(size = 10)\n  )\n  )\n\n\n\n\n\n\n\nFigure 2: Animated progression of aid worker attacks from 1997 to 2025, revealing the volatility and shifting epicenters of operational risk across time.\n\n\n\nCode\nplot_geo(df_map) |&gt;\n  add_markers(\n    x = ~Longitude, y = ~Latitude,\n    size = ~`Total affected`,\n    hoverinfo = \"text\",\n    text = ~paste(\"Country:\", Country, \"&lt;br&gt;Total affected:\", `Total affected`),\n    marker = list(color = 'red', opacity = 0.5, line = list(width = 0))\n  ) |&gt;\n  layout(\n    margin = list(t = 90),\n    title = \"Cumulative Footprint of Aid Worker Attacks (1997–2025)\",\n    geo = list(\n      projection = list(type = \"natural earth\"),\n      showland = TRUE,\n      landcolor = \"gray10\",\n      countrycolor = \"gray50\",\n      bgcolor = \"#1e1e1e\"\n    ),\n    paper_bgcolor = \"#1e1e1e\",\n    plot_bgcolor = \"#1e1e1e\",\n    font = list(color = \"#FFFFFF\"),\n    showlegend = FALSE\n  )\n\n\n\n\n\n\n\nFigure 3: High - density clusters in East Africa, South Asia, and the Sahel highlight persistent operational vulnerabilities — pinpointing regions where threat exposure is entrenched over time.\n\n\n\n\n\n\n\nInsight: Urban-Rural Divide\n\n\n\nPreliminary geospatial inspection suggests clustering in both urban flashpoints (e.g., Mogadishu, Kabul) and rural corridors (e.g., Sahelian belt), accentuating the challenge of one-size-fits-all security policies."
  },
  {
    "objectID": "visuals.html#organizational-risk-exposure",
    "href": "visuals.html#organizational-risk-exposure",
    "title": "Field Intelligence Patterns",
    "section": "Organizational Risk Exposure",
    "text": "Organizational Risk Exposure\n\nWhich agencies are most frequently involved in attacks?\n\n\n\nCode\nsuppressMessages(library(plotly))\n\norg_totals &lt;- df |&gt;\n  summarise(\n    UN = sum(UN),\n    INGO = sum(INGO),\n    ICRC = sum(ICRC),\n    `NRCS and IFRC` = sum(`NRCS and IFRC`),\n    NNGO = sum(NNGO),\n    Other = sum(Other)\n  ) |&gt;\n  pivot_longer(everything(), names_to = \"Organization\", values_to = \"Incidents\")\n\norg_plot &lt;- ggplot(org_totals, aes(x = reorder(Organization, -Incidents), y = Incidents)) +\n  geom_col(\n    aes(\n      text = paste0(\n        \"Target: \", Organization, \"&lt;br&gt;\",\n        \"Confirmed Incidents: \", Incidents\n      )\n    ),\n    fill = \"#4EA8DE\"\n  ) +\n  labs(\n    title = \"Organizational Exposure to Security Incidents\",\n    x = NULL,\n    y = \"Number of Incidents\"\n  ) +\n  theme_minimal(base_size = 11) +\n  theme(axis.text.x = element_text(angle = 25, hjust = 1))\n\nggplotly(org_plot, tooltip = \"text\") |&gt;\n  layout(\n    margin = list(t = 90)\n  )\n\n\n\n\n\n\n\nFigure 4: INGOs and NNGOs experience the brunt of violent incidents—suggesting that footprint scale, mission scope, and regional penetration correlate with heightened threat exposure."
  },
  {
    "objectID": "visuals.html#victim-pathways-aid-worker-roles-and-incident-outcomes",
    "href": "visuals.html#victim-pathways-aid-worker-roles-and-incident-outcomes",
    "title": "Field Intelligence Patterns",
    "section": "Victim Pathways: Aid Worker Roles and Incident Outcomes",
    "text": "Victim Pathways: Aid Worker Roles and Incident Outcomes\n\nWho bears the brunt of violence - international or national staff?\n\n\n\nCode\nlibrary(networkD3)\nsuppressMessages(library(htmlwidgets))\n\nsankey_data &lt;- df |&gt; summarise(\n  `National - Killed` = sum(`Nationals killed`, na.rm = TRUE),\n  `National - Wounded` = sum(`Nationals wounded`, na.rm = TRUE),\n  `National - Kidnapped` = sum(`Nationals kidnapped`, na.rm = TRUE),\n  `International - Killed` = sum(`Internationals killed`, na.rm = TRUE),\n  `International - Wounded` = sum(`Internationals wounded`, na.rm = TRUE),\n  `International - Kidnapped` = sum(`Internationals kidnapped`, na.rm = TRUE)\n) |&gt; pivot_longer(everything(), names_to = \"Path\", values_to = \"Count\") |&gt;\n  separate(Path, into = c(\"Role\", \"Outcome\"), sep = \" - \")\n\nnodes &lt;- data.frame(name = unique(c(sankey_data$Role, sankey_data$Outcome)))\n\nlinks &lt;- sankey_data |&gt; mutate(\n  source = match(Role, nodes$name) - 1,\n  target = match(Outcome, nodes$name) - 1,\n  value = Count\n) |&gt; select(source, target, value)\n\nsankey &lt;- suppressMessages(sankeyNetwork(\n  Links = links,\n  Nodes = nodes,\n  Source = \"source\",\n  Target = \"target\",\n  Value = \"value\",\n  NodeID = \"name\",\n  fontSize = 13,\n  nodeWidth = 30,\n  colourScale = JS(\"d3.scaleOrdinal().range(['#4EA8DE', '#FF5C5C', '#F4A261'])\"),\n  sinksRight = FALSE\n))\n\nhtmlwidgets::onRender(sankey, \"\n  function(el) {\n    function applyTheme() {\n      const theme = document.documentElement.getAttribute('data-bs-theme');\n      const color = (theme === 'dark') ? 'white' : 'black';\n      d3.select(el).selectAll('.node text').style('fill', color);\n    }\n\n    // Apply on load\n    applyTheme();\n\n    // Re-apply when theme toggles\n    const observer = new MutationObserver(applyTheme);\n    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['data-bs-theme'] });\n  }\n\")\n\n\n\n\n\n\n\nFigure 5: National staff absorb the overwhelming majority of violence — particularly deaths and injuries — underscoring structural disparities in frontline exposure and security provisioning."
  },
  {
    "objectID": "visuals.html#modus-operandi-forms-of-violence",
    "href": "visuals.html#modus-operandi-forms-of-violence",
    "title": "Field Intelligence Patterns",
    "section": "Modus Operandi: Forms of Violence",
    "text": "Modus Operandi: Forms of Violence\nWhat forms of violence are most common?\n\n\nCode\nattack_modes &lt;- df |&gt; count(`Means of attack`, sort = TRUE)\n\nmod_plot &lt;- ggplot(attack_modes, aes(x = n, y = reorder(`Means of attack`, n))) +\n  geom_point(aes(text = paste0(\"Method: \", `Means of attack`, \"&lt;br&gt;Incidents: \", n)),\n             size = 4, color = \"#FF5C5C\") +\n  labs(\n    title = \"Modus Operandi: Attack Types Against Aid Workers\",\n    x = \"Reported Incidents\", y = NULL\n  ) +\n  theme_minimal(base_size = 10)\n\nggplotly(mod_plot, tooltip = \"text\") |&gt;\n  layout(\n    margin = list(t = 90)\n  )\n\n\n\n\n\n\n\nFigure 6: Shootings, kidnappings, and bodily assaults dominate the landscape of violence — requiring field protocols that span both rapid - response and long - duration risk containment.\n\n\n\n\n\n\n\nTactical Implication\n\n\n\nShootings and kidnappings account for the majority of attacks—suggesting field teams need flexible protocols that account for both short-range threats and prolonged abductions."
  },
  {
    "objectID": "visuals.html#threat-actor-profile",
    "href": "visuals.html#threat-actor-profile",
    "title": "Field Intelligence Patterns",
    "section": "Threat Actor Profile",
    "text": "Threat Actor Profile\nWho is behind these attacks?\n\n\nCode\nactor_types &lt;- df |&gt; count(`Actor type`, sort = TRUE)\n\nactor_plot &lt;- ggplot(actor_types, aes(x = n, y = reorder(`Actor type`, n))) +\n  geom_segment(aes(x = 0, xend = n, yend = `Actor type`), color = \"#F4A261\") +\n  geom_point(aes(text = paste0(\"Threat Actor: \", `Actor type`, \"&lt;br&gt;Incidents: \", n)),\n             size = 4, color = \"#F4A261\") +\n  labs(\n    title = \"Threat Actor Landscape\",\n    x = \"Confirmed Incidents\", y = NULL\n  ) +\n  theme_minimal(base_size = 10)\n\nggplotly(actor_plot, tooltip = \"text\") |&gt;\n  layout(\n    margin = list(t = 90)\n  )\n\n\n\n\n\n\n\nFigure 7: Over 50% of incidents list the perpetrator as “Unknown,” reflecting both fog-of-war conditions and the limitations of ground - level intelligence gathering in active zones."
  },
  {
    "objectID": "essential_code/clean.html",
    "href": "essential_code/clean.html",
    "title": "Scholarship Project",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.read_csv(\"../raw_data/security_incidents.csv\")\n# df.head()\n\ncategorical_columns = ['Country Code', 'Country', 'Region', 'District', 'City', 'Actor name', 'Motive', 'Verified']\n\nfor col in categorical_columns:\n    df[col] = df[col].fillna(\"Unknown\")\n\ndf['Month'] = df['Month'].fillna(df['Month'].median()).astype(int)\ndf['Day'] = df['Day'].fillna(df['Day'].median()).astype(int)\n\norg_cols = [\"ICRC\", \"NRCS and IFRC\", \"NNGO\"]\ndf[org_cols] = df[org_cols].fillna(0).astype(int)\n\ndf_clean = df.dropna(subset=[\"Latitude\", \"Longitude\"])\ndf_clean = df_clean.drop_duplicates()\n\nobject_cols = df_clean.select_dtypes(include=['object']).columns\nfor col in object_cols:\n    df_clean[col] = df_clean[col].astype(str).str.strip()\n\ndf_clean.to_csv(\"../clean_data/security_incidents_cleaned.csv\", index=False)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Scope, Signals & Limitations",
    "section": "",
    "text": "The dataset contains 4,337 recorded incidents, each representing a confirmed attack against humanitarian operations between 1997 and 2025. Structured at the event level, these records document operational disruptions — not individuals or fixed locations. As such, the data is best understood as a chronicle of threat encounters, not a risk likelihood model.\nCertain fields — such as victim counts and agency involvement — offer strong fidelity, thanks to uniforms and ICRC - compliant markings. These details enable reliable quantification of affected nationals vs. internationals and targeted organizations such as the UN, INGOs, and Red Cross affiliates.\nHowever, critical intelligence gaps persist. Variables like actor name, motive, and means of attack are frequently marked as “Unknown.” This reflects a practical reality: in high - risk environments, immediate triage and rescue take precedence over detailed record-keeping, often resulting in delayed or degraded data collection.\nFrom an analytical standpoint, these incidents should ideally be contextualized against baseline rates — such as the number of deployed personnel, mission types, or vehicle movements in each region. While unavailable in this dataset, such baseline indicators remain a critical frontier for future humanitarian intelligence systems.\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(plotly))\n\ndf &lt;- read_csv(\"clean_data/security_incidents_cleaned.csv\", show_col_types = FALSE)\n\nincidents_per_year &lt;- df |&gt;\n  count(Year) |&gt;\n  arrange(Year)\n\ntop_spikes &lt;- incidents_per_year |&gt;\n  slice_max(n, n = 3)\n\nincidents_per_year &lt;- incidents_per_year |&gt;\n  mutate(\n    Category = if_else(Year %in% top_spikes$Year, \"Spike\", \"Trend\"),\n    IsPartial = if_else(Year == 2025, TRUE, FALSE)\n  )\n\ncurrent_theme &lt;- knitr::opts_knit$get(\"quarto.theme\") %||% \"light\"\n\ndark_colors &lt;- c(\"Spike\" = \"#FF5C5C\", \"Trend\" = \"#4EA8DE\", \"Partial\" = \"#999999\")\nlight_colors &lt;- c(\"Spike\" = \"#D62828\", \"Trend\" = \"#1D3557\", \"Partial\" = \"#AAAAAA\")\n\ncolors &lt;- if (grepl(\"dark\", current_theme, ignore.case = TRUE)) dark_colors else light_colors\n\np &lt;- ggplot(incidents_per_year, aes(x = Year, y = n)) +\n  geom_line(color = colors[\"Trend\"], linewidth = 1.2) +\n  geom_point(\n    aes(\n      color = case_when(\n        IsPartial ~ \"Partial\",\n        Category == \"Spike\" ~ \"Spike\",\n        TRUE ~ \"Trend\"\n      ),\n      text = if_else(IsPartial,\n                     paste0(\"Year: \", Year, \"&lt;br&gt;Incidents: \", n, \" (Partial Year)\"),\n                     paste0(\"Year: \", Year, \"&lt;br&gt;Incidents: \", n))\n    ),\n    size = 3\n  ) +\n  scale_color_manual(values = colors) +\n  labs(\n    title = \"Security Incident Timeline (1997–2025)\",\n    subtitle = \"Tracking the rise and surges in global attacks on aid workers\",\n    x = \"Year\",\n    y = \"Reported Incidents\",\n    color = NULL\n  ) +\n  theme_minimal(base_size = 10) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 13),\n    plot.subtitle = element_text(size = 10),\n    legend.position = \"top\"\n  )\n\ntimeline &lt;- ggplotly(p, tooltip = \"text\") |&gt;\n  layout(\n    margin = list(t = 90),\n    legend = list(orientation = \"h\", x = 0.4, y = 1.1, font = list(size = 9)),\n    xaxis = list(titlefont = list(size = 10)),\n    yaxis = list(titlefont = list(size = 10))\n  )\n\ntimeline\n\n\n\n\n\n\n\nFigure 1: Confirmed incidents involving aid worker harm, year. Data for 2025 is partial."
  }
]